name: CI

on:
  push:
    branches: [ master ]
    paths-ignore:
      - '**.md'
      - '**.sh'
  pull_request:
    branches: [ master ]
    paths-ignore:
      - '**.md'
      - '**.sh'

jobs:
  shared-test:
    name: Shared Test Linux
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up JDK 24
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '24'

      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@v4

      - name: Run Tests
        run: ./gradlew :shared:allTests

  shared-test-android:
    name: Shared Test Android
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up JDK 24
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '24'

      - name: Set up Android SDK
        uses: android-actions/setup-android@v3

      - name: Set up Gradle
        uses: gradle/actions/setup-gradle@v4

      - name: Run Android Tests
        run: ./gradlew :shared:testReleaseUnitTest

  cli-unittest-linux:
    name: CLI Test Linux
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up JDK 24
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '24'

      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@v4

      - name: Install LLVM and Clang
        uses: KyleMayes/install-llvm-action@v2
        with:
          version: "19.1.7"

      - name: Konan Cache
        uses: actions/cache@v4
        with:
          path: ~/.konan
          key: ${{ runner.os }}-konan-${{ hashFiles('*.gradle.kts', 'gradle/libs.versions.toml') }}
          restore-keys: |
            ${{ runner.os }}-konan-        

      - name: Run Tests
        run: ./gradlew :cli:linuxX64Test

  cli-unittest-macos:
    name: CLI Test macOS
    runs-on: macos-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up JDK 24
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '24'

      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@v4

      - name: Install LLVM and Clang
        uses: KyleMayes/install-llvm-action@v2
        with:
          version: "19.1.7"

      - name: Konan Cache
        uses: actions/cache@v4
        with:
          path: ~/.konan
          key: ${{ runner.os }}-konan-${{ hashFiles('*.gradle.kts', 'gradle/libs.versions.toml') }}
          restore-keys: |
            ${{ runner.os }}-konan-
              
      - name: Konan debug snapshot
        run: |
          set -eux
          echo "Kotlin/Native compiler:"
          $HOME/.konan/kotlinc/bin/konanc -version || true
          echo
          echo "Kotlin/Native interop tool:"
          $HOME/.konan/kotlinc/bin/cinterop -version || true
          echo
          echo "Konan cache tree (top level):"
          find $HOME/.konan -maxdepth 2 -type d | sort
          echo
          echo "Precompiled headers still around?"
          find $HOME/.konan -name '*.pch' -print | head -n 20
          echo
          echo "Toolchain symlink:"
          ls -l $HOME/.konan/dependencies || true
          echo
          echo "Environment snapshot:"
          env | sort
      
      - name: Xcode module cache snapshot
        run: |
          set -eux
          ls -lah ~/Library/Developer/Xcode
          ls -lah ~/Library/Developer/Xcode/DerivedData || true
          find ~/Library/Developer/Xcode -name '*.pch' -maxdepth 4 | head

      - name: temprally purge old konan cache
        run: rm -rf ~/.konan/cache && rm -rf ~/.konan/clang-cache

      - name: Run Tests
        run: ./gradlew :cli:macosArm64Test

  cli-unittest-jvm:
    name: CLI Test JVM
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up JDK 24
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '24'

      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@v4

      - name: Run JVM Tests
        run: ./gradlew :cli:jvmTest

  cmp-test-ios:
    name: CMP Test iOS
    runs-on: macos-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up JDK 24
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '24'

      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@v4

      - name: Install LLVM and Clang
        uses: KyleMayes/install-llvm-action@v2
        with:
          version: "19.1.7"

      - name: Konan Cache
        uses: actions/cache@v4
        with:
          path: ~/.konan
          key: ${{ runner.os }}-konan-${{ hashFiles('*.gradle.kts', 'gradle/libs.versions.toml') }}
          restore-keys: |
            ${{ runner.os }}-konan-

      - name: Run iOS Tests
        run: ./gradlew :composeApp:iosSimulatorArm64Test

  cmp-test-android:
    name: CMP Test Android
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up JDK 24
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '24'

      - name: Set up Android SDK
        uses: android-actions/setup-android@v3

      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@v4

      - name: Install LLVM and Clang
        uses: KyleMayes/install-llvm-action@v2
        with:
          version: "19.1.7"

      - name: Run Android Unit Tests
        run: ./gradlew :composeApp:testReleaseUnitTest

  cmp-test-jvm:
    name: CMP Test JVM Desktop
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up JDK 24
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '24'

      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@v4

      - name: Run JVM Desktop Tests
        run: ./gradlew :composeApp:jvmTest

  cli-build-linux:
    name: CLI Build Linux
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up JDK 24
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '24'

      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@v4

      - name: Install LLVM and Clang
        uses: KyleMayes/install-llvm-action@v2
        with:
          version: "19.1.7"

      - name: Konan Cache
        uses: actions/cache@v4
        with:
          path: ~/.konan
          key: ${{ runner.os }}-konan-${{ hashFiles('*.gradle.kts', 'gradle/libs.versions.toml') }}
          restore-keys: |
            ${{ runner.os }}-konan-

      - name: Build LinuxX64 Native Binary
        run: ./gradlew :cli:linkReleaseExecutableLinuxX64

  cli-build-macos:
    name:  CLI Build macOS
    runs-on: macos-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up JDK 24
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '24'

      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@v4

      - name: Install LLVM and Clang
        uses: KyleMayes/install-llvm-action@v2
        with:
          version: "19.1.7"

      - name: Konan Cache
        uses: actions/cache@v4
        with:
          path: ~/.konan
          key: ${{ runner.os }}-konan-${{ hashFiles('*.gradle.kts', 'gradle/libs.versions.toml') }}
          restore-keys: |
            ${{ runner.os }}-konan-

      - name: Konan debug snapshot
        run: |
          set -eux
          echo "Kotlin/Native compiler:"
          $HOME/.konan/kotlinc/bin/konanc -version || true
          echo
          echo "Kotlin/Native interop tool:"
          $HOME/.konan/kotlinc/bin/cinterop -version || true
          echo
          echo "Konan cache tree (top level):"
          find $HOME/.konan -maxdepth 2 -type d | sort
          echo
          echo "Precompiled headers still around?"
          find $HOME/.konan -name '*.pch' -print | head -n 20
          echo
          echo "Toolchain symlink:"
          ls -l $HOME/.konan/dependencies || true
          echo
          echo "Environment snapshot:"
          env | sort
      
      - name: Xcode module cache snapshot
        run: |
          set -eux
          ls -lah ~/Library/Developer/Xcode
          ls -lah ~/Library/Developer/Xcode/DerivedData || true
          find ~/Library/Developer/Xcode -name '*.pch' -maxdepth 4 | head

      - name: temprally purge old konan cache
        run: rm -rf ~/.konan/cache && rm -rf ~/.konan/clang-cache

      - name: Build MacOSX64 Native Binary
        run: ./gradlew :cli:linkReleaseExecutableMacosArm64